#################################################################################
#                              OneBranch Pipelines                              #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger:
  branches:
    include:
    - main

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}

  BuildSolution: $(Build.SourcesDirectory)\dirs.proj
  BuildConfiguration: Release

  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    globalSdl: # https://aka.ms/obpipelines/sdl
      # tsa:
      #  enabled: true # SDL results of non-official builds aren't uploaded to TSA by default.
      # credscan:
      #   suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress

    stages:
    - stage: docker
      jobs:
      - job: build_image
        pool:
          type: linux  # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs
        
        variables:
          ob_outputDirectory: '$(Build.SourcesDirectory)/target/Release/x64' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
          # https://aka.ms/obpipelines/sdl
          ob_sdl_binskim_enabled: true # you can disable sdl tools in non-official build 
          ob_sdl_binskim_break: true # always break the build on binskim issues. You can disable it by setting to 'false'
          ob_sdl_binskim_scanOutputDirectoryOnly: true
          LinuxContainerImage: 'mcr.microsoft.com/onebranch/cbl-mariner/build:2.0'
          CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
          OB_build_container: true

        steps:
          - task: onebranch.pipeline.version@1 # generates automatic version. For other versioning options check https://aka.ms/obpipelines/versioning
            displayName: 'Setup BuildNumber'
            env:
              ob_restore_phase: true # # Steps decorated with this env variable will be run with network. All these steps are hoisted to the beginning of the build
            inputs:
              system: 'RevisionCounter'
              major: '1'
              minor: '0'
              exclude_commit: true

          - task: UseDotNet@2
            continueOnError: true
            env:
              ob_restore_phase: true # # Steps decorated with this env variable will be run with network. All these steps are hoisted to the beginning of the build
            inputs:
              packageType: 'sdk'
              useGlobalJson: true
              performMultiLevelLookup: true

          - task: NuGetAuthenticate@1
            env:
              ob_restore_phase: true # # Steps decorated with this env variable will be run with network. All these steps are hoisted to the beginning of the build
            displayName: NuGet Authenticate

          - task: DotNetCoreCLI@2
            displayName: 'DotNetCore restore'
            inputs:
              command: 'restore'
              projects: '$(Build.SourcesDirectory)/dirs.proj'
              feedsToUse: 'config'
              nugetConfigPath: '$(Build.SourcesDirectory)/Nuget.config'

          - task: DotNetCoreCLI@2
            displayName: 'Build'
            inputs:
              command: 'build'
              projects: '$(Build.SourcesDirectory)/dirs.proj'
              arguments: --no-restore --configuration $(BuildConfiguration)

          - task: onebranch.pipeline.imagebuildinfo@1
            inputs:
              repositoryName: apiservice
              dockerFileRelPath: artifacts/ApiService/Dockerfile
              dockerFileContextPath: artifacts/ApiService
              registry: onebranch.azurecr.io
              addPipelineData: false
              push: false
              saveImageToPath: ../target/Release/x64/Ev2Deployment/Ev2ServiceArtifactsRoot/dgh.apiservice.tar.gz
              buildkit: 1
              enable_network: false
              build_tag: $(Build.BuildNumber)-$(Build.SourceVersion) # Docker image tag
              compress: true
          
          - task: onebranch.pipeline.imagebuildinfo@1
            inputs:
              repositoryName: workerservice
              dockerFileRelPath: artifacts/WorkerService/Dockerfile
              dockerFileContextPath: artifacts/WorkerService
              registry: onebranch.azurecr.io
              addPipelineData: false
              push: false
              saveImageToPath: ../target/Release/x64/Ev2Deployment/Ev2ServiceArtifactsRoot/dgh.workerservice.tar.gz
              buildkit: 1
              enable_network: false
              build_tag: $(Build.BuildNumber)-$(Build.SourceVersion) # Docker image tag
              compress: true
